#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;
use LWP::UserAgent;
use Cwd;
use Pod::Usage;
use File::Path qw/make_path/;
require local::lib;

our $VERSION = '0.01';

GetOptions(
    'h|help' => \my $help,
);
pod2usage() if $help;

my $CPANM_URL = 'http://github.com/miyagawa/cpanminus/raw/master/cpanm';

@ARGV==1 or pod2usage;

&main;exit;

sub main {
    my $dest = shift @ARGV;
    setup($dest);
}

sub setup {
    my $dest = shift;
    $dest = Cwd::abs_path($dest);
    make_path("$dest", "$dest/bin", {error => \my $err});
    die @$err if @$err;

    local::lib->import($dest);

    {
        my $fname = "$dest/bin/activate";
        open my $ll_fh, '>', \my $local_lib_src
            or die "oops";
        {
            local *STDOUT = $ll_fh;
            local::lib->print_environment_vars_for($dest);
        }
        open my $fh, '>', $fname
            or die "cannot open file($fname): $!";
        my $src = <<'...';
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset VIRTUAL_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive

VIRTUAL_ENV="<<<$dest>>>"
export VIRTUAL_ENV

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/bin:$PATH"
export PATH

_OLD_VIRTUAL_PS1="$PS1"
if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
    # special case for Aspen magic directories
    # see http://www.zetadev.com/software/aspen/
    PS1="[`basename \`dirname \"$VIRTUAL_ENV\"\``] $PS1"
else
    PS1="(`basename \"$VIRTUAL_ENV\"`)$PS1"
fi
export PS1

<<<$local_lib_src>>>

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
...
        $src =~ s/<<<(\$[a-z_]+)>>>/$1/gee;
        print {$fh} $src;
        close $fh;
    }

    {
        my $fname = "$dest/bin/cpanm-local";
        open my $fh, '>', $fname
            or die "cannot open file($fname): $!";
        my $cpanm = get($CPANM_URL);
        $cpanm =~ s{#!/usr/bin/env perl}{#!$^X\nuse local::lib "$dest";\n};
        print {$fh} $cpanm;
        close $fh;
        chmod 0755, $fname;
    }

    {
        my $fname = "$dest/bin/perl";
        open my $fh, '>', $fname
            or die "cannot open file($fname): $!";
        print {$fh} <<"...";
#!$^X
exec '$^X', '-Mlocal::lib=$dest', \@ARGV
...
        close $fh;
        chmod 0755, $fname;
    }
}

sub get {
    my ($url) = @_;
    my $ua = LWP::UserAgent->new();
    my $res = $ua->get($url);
    $res->is_success or die $res->status_line;
    return $res->content;
}

__END__

=head1 SYNOPSIS

    % plenv ./env/

